{"ast":null,"code":"var _jsxFileName = \"/Users/macbook/Desktop/Software/reactapps/netapp-1/src/App.js\";\nimport React, { Component } from \"react\";\nimport \"./App.css\";\nimport person from \"./img/person.jpg\";\nimport * as ml5 from \"ml5\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      predictions: []\n    };\n\n    this.setPrediction = pred => {\n      this.setState({\n        predictions: pred\n      });\n    };\n\n    this.classifyImg = () => {\n      const classifier = ml5.imageClassifier(\"MobileNet\", modelLoaded);\n\n      function modelLoaded() {\n        console.log(\"Model Loaded!\");\n      }\n\n      const image = document.getElementById(\"image\"); //Make prediction\n\n      classifier.predict(image, 5, function (err, results) {\n        return results;\n      }).then(results => {\n        // Set the predictions in the state\n        this.setPredictions(results);\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.classifyImg();\n  }\n\n  render() {\n    let predictions = React.createElement(\"div\", {\n      className: \"loader\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    });\n\n    if (this.state.predictions.length > 0) {\n      predictions = this.state.predictions.map((pred, i) => {\n        let className = pred.className,\n            probability = pred.probability;\n        probability = Math.floor(probability * 10000 / 100 + \"%\");\n        return React.createElement(\"div\", {\n          key: i + \"\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43\n          },\n          __self: this\n        }, i + 1, \". Prediction: \", className, \" at \", probability, \">\", \" \");\n      });\n    }\n\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, \"Image classification \"), React.createElement(\"img\", {\n      src: person,\n      id: \"image\",\n      width: \"400\",\n      alt: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }), predictions);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/macbook/Desktop/Software/reactapps/netapp-1/src/App.js"],"names":["React","Component","person","ml5","App","state","predictions","setPrediction","pred","setState","classifyImg","classifier","imageClassifier","modelLoaded","console","log","image","document","getElementById","predict","err","results","then","setPredictions","componentDidMount","render","length","map","i","className","probability","Math","floor"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,WAAP;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;;AAEA,MAAMC,GAAN,SAAkBH,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAC1BI,KAD0B,GAClB;AACNC,MAAAA,WAAW,EAAE;AADP,KADkB;;AAAA,SAK1BC,aAL0B,GAKVC,IAAI,IAAI;AACtB,WAAKC,QAAL,CAAc;AACZH,QAAAA,WAAW,EAAEE;AADD,OAAd;AAGD,KATyB;;AAAA,SAU1BE,WAV0B,GAUZ,MAAM;AAClB,YAAMC,UAAU,GAAGR,GAAG,CAACS,eAAJ,CAAoB,WAApB,EAAiCC,WAAjC,CAAnB;;AACA,eAASA,WAAT,GAAuB;AACrBC,QAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACD;;AACD,YAAMC,KAAK,GAAGC,QAAQ,CAACC,cAAT,CAAwB,OAAxB,CAAd,CALkB,CAMlB;;AACAP,MAAAA,UAAU,CACPQ,OADH,CACWH,KADX,EACkB,CADlB,EACqB,UAASI,GAAT,EAAcC,OAAd,EAAuB;AACxC,eAAOA,OAAP;AACD,OAHH,EAIGC,IAJH,CAIQD,OAAO,IAAI;AACf;AACA,aAAKE,cAAL,CAAoBF,OAApB;AACD,OAPH;AAQD,KAzByB;AAAA;;AA0B1BG,EAAAA,iBAAiB,GAAG;AAClB,SAAKd,WAAL;AACD;;AAEDe,EAAAA,MAAM,GAAG;AACP,QAAInB,WAAW,GAAG;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAlB;;AACA,QAAI,KAAKD,KAAL,CAAWC,WAAX,CAAuBoB,MAAvB,GAAgC,CAApC,EAAuC;AACrCpB,MAAAA,WAAW,GAAG,KAAKD,KAAL,CAAWC,WAAX,CAAuBqB,GAAvB,CAA2B,CAACnB,IAAD,EAAOoB,CAAP,KAAa;AAAA,YAC9CC,SAD8C,GACnBrB,IADmB,CAC9CqB,SAD8C;AAAA,YACnCC,WADmC,GACnBtB,IADmB,CACnCsB,WADmC;AAEpDA,QAAAA,WAAW,GAAGC,IAAI,CAACC,KAAL,CAAYF,WAAW,GAAG,KAAf,GAAwB,GAAxB,GAA8B,GAAzC,CAAd;AACA,eACE;AAAK,UAAA,GAAG,EAAEF,CAAC,GAAG,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACGA,CAAC,GAAG,CADP,oBACwBC,SADxB,UACuCC,WADvC,OACqD,GADrD,CADF;AAKD,OARa,CAAd;AASD;;AACD,WACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BADF,EAEE;AAAK,MAAA,GAAG,EAAE5B,MAAV;AAAkB,MAAA,EAAE,EAAC,OAArB;AAA6B,MAAA,KAAK,EAAC,KAAnC;AAAyC,MAAA,GAAG,EAAC,EAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAGGI,WAHH,CADF;AAOD;;AAlDyB;;AAqD5B,eAAeF,GAAf","sourcesContent":["import React, { Component } from \"react\";\nimport \"./App.css\";\nimport person from \"./img/person.jpg\";\nimport * as ml5 from \"ml5\";\n\nclass App extends Component {\n  state = {\n    predictions: []\n  };\n\n  setPrediction = pred => {\n    this.setState({\n      predictions: pred\n    });\n  };\n  classifyImg = () => {\n    const classifier = ml5.imageClassifier(\"MobileNet\", modelLoaded);\n    function modelLoaded() {\n      console.log(\"Model Loaded!\");\n    }\n    const image = document.getElementById(\"image\");\n    //Make prediction\n    classifier\n      .predict(image, 5, function(err, results) {\n        return results;\n      })\n      .then(results => {\n        // Set the predictions in the state\n        this.setPredictions(results);\n      });\n  };\n  componentDidMount() {\n    this.classifyImg();\n  }\n\n  render() {\n    let predictions = <div className=\"loader\" />;\n    if (this.state.predictions.length > 0) {\n      predictions = this.state.predictions.map((pred, i) => {\n        let { className, probability } = pred;\n        probability = Math.floor((probability * 10000) / 100 + \"%\");\n        return (\n          <div key={i + \"\"}>\n            {i + 1}. Prediction: {className} at {probability}>{\" \"}\n          </div>\n        );\n      });\n    }\n    return (\n      <div className=\"App\">\n        <h1>Image classification </h1>\n        <img src={person} id=\"image\" width=\"400\" alt=\"\" />\n        {predictions}\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}